#
# An example configuration file for the inbox scanner frontend
#
# Note:
# This file is processed by the ini2bash tool which reads the file using 
# Python's configparser and later outputs a shell-compatible environment file.
# This means that shell syntax can be used in this file.
#

[scanner]
device_id=sane:dsseries:usb:0x04F9:0x60E0
vendor=Brother
model=DS-720D
serial_no=E72184E5U111356

# 
# Any of the below are optional if you are happy with the defaults
# used by libinsane.
#
[scanner.settings]
mode=Color
source=Duplex ADF
resolution=300
# Scan size in the x direction [mm]
br-x=215.9
# Scan size in the y direction [mm]
br-y=355.6

[display.lcdproc]
hostname=localhost
port=13666

[libinsane]
read_block_size=262144

[workflow]
default_pagecount=2
page_filename_format=sheet-{n:03d}-{side}
workflow_inbox=/var/lib/inbox/postprocess

[workflow.deskew]
deskew_percentage=40

[workflow.unpaper]
mask_scan_size=5,5

[workflow.img2pdf]
icc_profile=${pkgs.colord}/share/color/icc/colord/sRGB.icc

[output]
type=rsync
spool_dir=/var/lib/inbox/cabinet

#
# Example configuration for the 'move' output
#
[output.move]
destination=/tmp

#
# Example configuration for the 'rsync' output.
#
# This example sends the files to a paperless-ngx consume directory.
# It puts the files into a subdirectory named after the hostname where 
# the service is deployed onto (in NixOS). If PAPERLESS_CONSUMER_SUBDIRS_AS_TAGS
# is enabled in paperless this gives an additional tag to the document specifying 
# the inbox host used to scan it.
[output.rsync]
connect_prog=ssh -o UserKnownHostsFile=$CREDENTIALS_DIRECTORY/known_hosts -i $CREDENTIALS_DIRECTORY/id_ed25519 -l user paperless-ngx nc localhost rsync
target=rsync://inbox@localhost/consume/${config.networking.hostName}.${config.networking.domain}/
credentials_file=$CREDENTIALS_DIRECTORY/rsync.secret

